<?xml version="1.0" encoding="UTF-8"?>
<!--scan：自动加载判断，当配置文件发生改变时，将会被重新加载。默认为true-->
<!--scanPeriod：检测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认为毫秒，当scan=true时这个值生效，默认时间间隔为1分钟-->
<!--debug当被设置为true时，将打印出logback内部日志信息，实时查看logback运行信息，默认为false-->
<configuration debug="false" scan="true" scanPeriod="60 seconds">
<!--    <include resource="org/springframework/boot/logging/logback/base.xml"/>-->
    <contextName>logback</contextName>

    <property name="LOG_LEVEL" value="debug" />
    <property name="LOG_FILE_PATH" value="logs" />
    <property name="pattern" value="%d{HH:mm:ss.SSS} [%boldYellow(%-15.15thread)] [%X{MDC_LOG_ID}] %highlight(%-5level) %boldGreen(%-40.40logger{39}){cyan} - %msg %n"/>

    <!-- 用于说明输出介质，此处说明控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 类似于layout，除了将时间转化为数组，还会将转换后的数组输出到相应的文件中 -->
        <encoder>
            <!-- 定义日志的输出格式 -->
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE_PATH}/base.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${LOG_FILE_PATH}/base.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <!-- 保存7天日志，文件总大小在3GB -->
            <maxHistory>7</maxHistory>
            <totalSizeCap>50GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <!--用来设置某一个包或者某一个具体类的日志打印级别以及方式-->
<!--    name:指定对应的包路径或者类路径。-->
<!--    level:用来设置日志打印的级别，五个常用打印级别从低至高依次为TRACE、DEBUG、INFO、WARN、ERROR，如果未设置此级别，那么当前logger会继承上级的级别-->
<!--    additivity:是否向上级log传递打印信息，默认为true-->
    <logger name="org.springframework.web" level="${LOG_LEVEL}"/>
    <logger name="org.springboot.sample" level="${LOG_LEVEL}" />
    <logger name="com.alibaba.druid" level="${LOG_LEVEL}" />
<!--    <logger name="com.ydh.redsheep.base.mapper" level="${LOG_LEVEL}" />-->

    <root level="DEBUG">
        <appender-ref ref="console" />
        <appender-ref ref="file" />
    </root>

</configuration>